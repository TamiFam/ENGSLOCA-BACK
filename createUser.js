// server/createUser.js
import bcrypt from 'bcrypt';
import User from './models/User.js'; // –≤–∞—à–∞ –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import mongoose from 'mongoose';
import dotenv from 'dotenv';

dotenv.config();

const createAdminUser = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB');

    const email = 'andrey'; // email –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    const password = 'chesslove'; // –ø–∞—Ä–æ–ª—å –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    const role = process.argv[4] || 'user'; // —Ä–æ–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é user)

    if (!email || !password) {
      console.log('‚ùå Usage: node createUser.js <email> <password> [role]');
      console.log('Example: node createUser.js admin@mail.ru 123456 admin');
      process.exit(1);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      console.log('‚ùå User already exists:', existingUser);
      process.exit(1);
    }

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const passwordHash = await bcrypt.hash(password, 10);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await User.create({
      email,
      passwordHash,
      role: role
    });

    console.log('‚úÖ User created successfully:');
    console.log('üìß Email:', user.email);
    console.log('üë§ Role:', user.role);
    console.log('üÜî ID:', user._id);
    console.log('üìÖ Created:', user.createdAt);

    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå Error creating user:', error);
    process.exit(1);
  }
};

createAdminUser();